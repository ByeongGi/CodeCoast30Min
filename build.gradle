apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

//외부 환경변수 
ext{
    versions = [
            jdk:'1.8',
            spring:'4.2.5.RELEASE',
            hibernate:'5.1.0.Final',
            hibernateValidator:'5.2.4.Final',
            springdatajpa:'1.9.4.RELEASE',
            springsecurity:'4.0.4.RELEASE',
            hikariCP: '2.4.4',
            h2:'1.4.191',
            mysqldriver:'5.1.38',
            ehcacheCore:'2.6.11',
            sitemesh:'3.0.1',
            junit:'4.12',
            logback:'1.1.6',
            dbunit : '2.5.1',
            springTestDbunit: '1.2.1',
            lucy: '1.6.3',
            aspectjweaver:'1.8.8',
            lombok:'1.16.8',
            fileUpload: '1.3.1',
            commonsIo: '2.4',
            jackson: '2.7.3'
    ]
}


dependencies {
    // spring
    compile("org.springframework:spring-webmvc:${versions.spring}")
    compile("org.springframework:spring-context:${versions.spring}")
    compile("org.springframework:spring-context-support:${versions.spring}")
    compile("com.navercorp.lucy:lucy-xss:${versions.lucy}")
    compile("org.sitemesh:sitemesh:${versions.sitemesh}")


    // persistence
    compile("org.springframework.data:spring-data-jpa:${versions.springdatajpa}")
    compile("org.hibernate:hibernate-core:${versions.hibernate}")
    compile("org.hibernate:hibernate-entitymanager:${versions.hibernate}")
    compile("org.hibernate:hibernate-validator:${versions.hibernateValidator}")

    // jspPage
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    runtime "javax.servlet:jstl:1.2"

    // db
    compile("com.zaxxer:HikariCP:${versions.hikariCP}")
    compile("com.h2database:h2:${versions.h2}")

    compile("org.projectlombok:lombok:${versions.lombok}")

    compile "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
    compile "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
    compile "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"

    // test
    testCompile("org.springframework:spring-test:${versions.spring}")
    testCompile("junit:junit:${versions.junit}")
   
    //logging
    compile("ch.qos.logback:logback-classic:${versions.logback}")
}


buildDir = 'build'
//자바 버젼
sourceCompatibility = versions.jdk
targetCompatibility = versions.jdk
//UTF-8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
//리파지토리
repositories {   mavenCentral() }
//의존성


//초기 경로 디렉터리 생성
task initSrc << {
    project.sourceSets*.allSource.srcDirTrees.flatten().dir.each { dir ->
        dir.mkdirs()
    }
}


/* Eclipse 관련 설정들 */
tasks.eclipse.dependsOn cleanEclipse
tasks.eclipse.dependsOn initSrc

eclipse {
  classpath {
    downloadSources = true
    defaultOutputDir = file("${buildDir}/classes/main")

     file {
            whenMerged { classpath ->
                def entries = classpath.entries
                entries.findAll { it.kind == 'lib' }*.exported = false
          }
    }
  }
  wtp{
      facet {
            facet name: 'jst.web', version: '3.1' // Servlet Spec Version 지정
            facet name: 'jst.java', version: '1.8' // Java Version  1.8
      }
  }
}

tasks.idea.dependsOn initSrc